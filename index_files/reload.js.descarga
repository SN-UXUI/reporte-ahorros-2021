function XHConn(){
    var xmlhttp, bComplete = false;
    try { xmlhttp = new ActiveXObject("Msxml2.XMLHTTP"); }
    catch (e) { try { xmlhttp = new ActiveXObject("Microsoft.XMLHTTP"); }
    catch (e) { try { xmlhttp = new XMLHttpRequest(); }
    catch (e) { xmlhttp = false; }}}
    if (!xmlhttp) return null;
    this.connect = function(sURL, sMethod, sVars, fnDone)
    {
        if (!xmlhttp) return false;
        bComplete = false;
        sMethod = sMethod.toUpperCase();

        try {
            if (sMethod == "GET")
            {
                xmlhttp.open(sMethod, sURL+sVars, true);
                sVars = "";
            }
            else
            {
                xmlhttp.open(sMethod, sURL, true);
                xmlhttp.setRequestHeader("Method", "POST "+sURL+" HTTP/1.1");
                xmlhttp.setRequestHeader("Content-Type",
                    "application/x-www-form-urlencoded");
            }
            xmlhttp.onreadystatechange = function(){
                if (xmlhttp.readyState == 4 && !bComplete)
                {
                    bComplete = true;
                    fnDone(xmlhttp);
                }};
            xmlhttp.send(sVars);
        }
        catch(z) { return false; }
        return true;
    };
    return this;
    }
    
function RecargarDiv(target,url){
    var aleatorio = Math.ceil(Math.random()*10000),
    url=url+"&AleatorioMDFK="+aleatorio,
    Reload = new XHConn();
    if (!Reload) alert("XMLHTTP no esta disponible. Int&eacute;ntalo con un navegador m&aacute;s actual.");
    var peticion = function (oXML) { document.getElementById(target).innerHTML = oXML.responseText;parseScript(oXML.responseText) };
    Reload.connect(url, "GET", "", peticion);
}


function parseScript(strcode) {

  var scripts = new Array();        
  
  while(strcode.indexOf("<script") > -1 || strcode.indexOf("</script") > -1) {
    var s = strcode.indexOf("<script");
    var s_e = strcode.indexOf(">", s);
    var e = strcode.indexOf("</script", s);
    var e_e = strcode.indexOf(">", e);

    scripts.push(strcode.substring(s_e+1, e));

    strcode = strcode.substring(0, s) + strcode.substring(e_e+1);
  }

 for(var i=0; i<scripts.length; i++) {
   try {
    eval(scripts[i]);
  }
  catch(ex) {
     // do what you want here when a script fails
     alert("Denegado por ParseScript.")
   }
 }
 } 